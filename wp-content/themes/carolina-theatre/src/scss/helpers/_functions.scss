///////////////////////////////////
///////////////////////////////////
//////////// FUNCTIONS ////////////
///////////////////////////////////
///////////////////////////////////


// This is the default html and body font-size for the base rem value.
$rem-base: 16px !default;

///////////////////////////////////
// @functions
///////////////////////////////////

// STRIP UNIT
// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// CONVERT TO REM
@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function data($attr) {
  @if $namespace {
    @return '[data-' + $namespace + '-' + $attr + ']';
  }

  @return '[data-' + $attr + ']';
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

///////////////////////////////////
// @mixins
///////////////////////////////////
@mixin rem($value) {
  font-size: $value + px;
  font-size: rem-calc($value);
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin breakpoint($size) {
  @media screen and (max-width: $size) { @content; } 
}

@mixin breakpoint-min($size) {
  @media screen and (min-width: $size) { @content; } 
}

@mixin box-shadow($args: small){
  @if $args == small {
    box-shadow: 3px 6px 20px rgba($black, 0.2);
  } @else if $args == large {
    box-shadow: 3px 10px 30px rgba($black, 0.25);
  } @else {
    box-shadow: $args;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin transition($args: all .5s ease){
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin transform($args){
  -webkit-transform: $args;
  -moz-transform: $args;
  -ms-transform: $args;
  -o-transform: $args;
  transform: $args;
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@include keyframes(bounce){
  0% {
    @include transform(translateY(0));
  }
  52% {
    @include transform(translateY(-6px));
  }
  100% {
    @include transform(translateY(0));
  }
}

@include keyframes(fade-in){
  0% {
    @include opacity(0);
  }
  100% {
    @include opacity(1);
  }
}

// example animation classes
.bounce {
  @include animation(bounce 2s 1);  
}
.fade-in {
  @include animation(fade-in 2s 1);
}

